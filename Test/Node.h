/*******************************************************
* @file: Node.h
* @author: Dravid Joseph
* @date: 9/4/16
* @brief: Header file for Node Class
********************************************************/

#ifndef NODE_H
#define NODE_H

template<typename T>
class Node{


	/*******************************************************
	* PUBLIC METHODS
	********************************************************/
	
public:
	
	
	/*******************************************************
	* @pre :  None
	* @post : Initializes Node class
	* @return : Initialized Node
	********************************************************/
	Node();
	
	/*******************************************************
	* @pre :  None
	* @post : gets stored value of node
	* @return : T
	********************************************************/
	T getValue() const;
	
	/*******************************************************
	* @pre :  None
	* @post : gets stored value of node
	* @return : T
	********************************************************/
	void setValue(T val);
	
	/*******************************************************
	* @pre :  None
	* @post : Initializes Node class
	* @return : Initialized Node
	********************************************************/
	Node<T>* getNext() const;
	
	
	/*******************************************************
	* @pre :  None
	* @post : Initializes Node class
	* @return : Initialized Node
	********************************************************/
	void setNext(Node<T>* next);




	/*******************************************************
	* PRIVATE MEMBERS
	********************************************************/
	
private:
	/*******************************************************
	*Value stored inside Node
	********************************************************/
	T m_value;
	
	/*******************************************************
	*Pointer to next Node
	********************************************************/
	Node<T>* m_next;

};
#include "Node.hpp"
#endif